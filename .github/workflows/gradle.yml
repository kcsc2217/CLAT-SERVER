name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]  # develop 브랜치에 푸시될 때 배포
  pull_request:
    branches: [ "develop" ]  # develop 브랜치에 대한 PR에 대해서도 실행

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true  # 서브모듈 초기화는 이곳에 위치해야 합니다.
        token: ${{ secrets.GIT_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582  # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

  deploy:
    if: github.ref == 'refs/heads/develop'  # develop 브랜치에 푸시될 때 배포
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # 서브모듈 초기화는 이곳에 위치해야 합니다.
          token: ${{ secrets.GIT_TOKEN }}
  
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
  
      - name: Deploy to EC2 using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # 1. PM2 설치 (이미 설치된 경우에는 건너뛰기)
            if ! command -v pm2 &> /dev/null
            then
              echo "PM2 not found, installing..."
              sudo npm install pm2@latest -g
            else
              echo "PM2 is already installed"
            fi

            # 2. 최신 코드로 Git Pull (서브모듈 포함)
            cd /home/ubuntu/CLAT-SERVER
            git pull origin develop --recurse-submodules

            # 3. 기존 PM2 프로세스 종료
            pm2 stop clat || true   # PM2로 관리 중인 프로세스를 종료

            # 4. 애플리케이션 실행 (PM2로 백그라운드에서 실행)
            pm2 start /home/ubuntu/CLAT-SERVER/build/libs/clat-0.0.1-SNAPSHOT.jar --name clat --no-daemon

            # 5. PM2로 실행 중인 프로세스 확인
            pm2 list














  
