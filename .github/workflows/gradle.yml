name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]  # develop 브랜치에 푸시될 때 배포
  pull_request:
    branches: [ "develop" ]  # develop 브랜치에 대한 PR에 대해서도 실행

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true  # 서브모듈 초기화는 이곳에 위치해야 합니다.
        token: ${{ secrets.GIT_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582  # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

  deploy:
    if: github.ref == 'refs/heads/develop'  # develop 브랜치에 푸시될 때 배포
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # 서브모듈 초기화
          token: ${{ secrets.GIT_TOKEN }}
  
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
  
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
  
      - name: Deploy to EC2 using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # 서브모듈 업데이트 (SSH 방식으로)
            git submodule update --init --recursive --depth 1
            
            # PM2 프로세스 종료
            pkill -f 'java -jar clat-0.0.1-SNAPSHOT.jar' || true
            
            # 프로젝트 디렉토리로 이동
            cd /home/ubuntu/CLAT-SERVER
            
            # 최신 코드로 Git Pull (서브모듈 포함)
            git pull origin develop --recurse-submodules
            
            # 의존성 설치 (npm ci와 mecab 설치)
            npm install  # package-lock.json이 없다면 설치하고, ci로 설치합니다.
            npm ci && node_modules/mecab-ya/bin/install-mecab ko
            
            # Java 애플리케이션 시작 (새로 시작)
            pm2 start build/libs/clat-0.0.1-SNAPSHOT.jar --name clat-0.0.1-SNAPSHOT || true
            
            # 프로세스 상태 저장 (PM2에서 새로운 프로세스 상태 저장)
            pm2 save


















  
