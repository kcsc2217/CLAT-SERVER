name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]  # develop 브랜치에 푸시될 때 배포
  pull_request:
    branches: [ "develop" ]  # develop 브랜치에 대한 PR에 대해서도 실행

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        token: ${{ secrets.GIT_TOKEN }}
        submodules: recursive

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582  # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

  deploy:
    if: github.ref == 'refs/heads/develop'  # develop 브랜치에 푸시될 때 배포
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        token: ${{ secrets.GIT_TOKEN }}
        submodules: true

    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ubuntu
        KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no -i $KEY $USERNAME@$HOST << 'EOF'
          # EC2에서 실행할 명령어
          cd /path/to/your/app
          git pull origin develop  # develop 브랜치로 pull
          ./gradlew bootRun
        EOF
  
